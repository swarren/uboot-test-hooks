# Copyright 2019 Google LLC. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

# Handles the common SDwire mounting (caller does power control)

mount_dir=/media/${mount_point}

# Switch over to get USB card access
sd-mux-ctrl --device-serial ${sdwire_serial} --ts

done=false
for i in {0..9}; do
    if out="$(mount UUID=${mount_uuid} 2>&1)"; then
        done=true
        break
    fi
    echo $out

    # If it is already mounted, try to unmount it first. It may have been
    # mounted by another user so we won't have the access we need. If this gives
    # an error then we know we cannot continue
    if [[ $out == *"already mounted"* ]]; then
        umount UUID=${mount_uuid}
    fi
    sleep 1
done
if [[ $done = false ]]; then
    echo "Failed to mount UUID ${mount_uuid} after 10 tries"
    exit 1
fi

# Sanity check
if ! mountpoint -q ${mount_dir}; then
    echo "Mount ${mount_dir} not available after 'mount'"
    exit 1
fi

writer.${flash_writer} ${mount_dir} ${U_BOOT_BUILD_DIR}
umount ${mount_dir}

# Back to card access for the DUT
sd-mux-ctrl --device-serial ${sdwire_serial} --dut
